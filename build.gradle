buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath group: 'net.researchgate', name: 'gradle-release', version: '2.6.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
//        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'

    }
}

apply plugin: 'net.researchgate.release'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'war'
apply from: 'https://raw.github.com/gretty-gradle-plugin/gretty/master/pluginScripts/gretty.plugin'

group = "org.grobid"

sourceCompatibility = 1.8
targetCompatibility = 1.8


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/rookies/maven" }
}

dependencies {
    compile 'org.slf4j:slf4j-log4j12:1.7.25'

    //Tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.easymock:easymock:3.4'
    testCompile 'org.hamcrest:hamcrest-all:1.3'

    //GROBID
    compile 'org.grobid:grobid-core:0.6.1'
    compile 'org.grobid:grobid-trainer:0.6.1'

    //Apache commons
    compile 'org.apache.commons:commons-collections4:4.1'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'commons-logging:commons-logging:1.2'
    compile 'commons-io:commons-io:2.5'
    compile 'commons-pool:commons-pool:1.6'

    // xml parsing
    compile 'org.codehaus.woodstox:stax2-api:3.1.4'
    compile 'com.fasterxml.woodstox:woodstox-core:5.0.3'

    //Json
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.0'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.0'

    //Web interface
    compile 'org.glassfish.jersey.media:jersey-media-multipart:2.27'
    compile 'org.glassfish.jersey.inject:jersey-hk2:2.27'
    compile 'org.glassfish.jersey.containers:jersey-container-grizzly2-servlet:2.27'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.27'
    compile 'org.glassfish.jersey.core:jersey-client:2.27'
    compile 'javax.ws.rs:javax.ws.rs-api:2.1'

    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'javax.activation:activation:1.1.1'
    compile 'com.google.guava:guava:16.0.1'

    compile 'org.jvnet.mimepull:mimepull:1.6'
    compile 'net.arnx:jsonic:1.3.5'
}

configurations {
    compile.exclude group: "org.slf4j", module: "slf4j-jdk14"
}

configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.4.01'
    }
}

// Gretty configuration

gretty {
    //httpPort = 8081
    contextPath = '/'
    servletContainer = "jetty9.4"
}

// Training configuration

def trainerTasks = [
        //Training models
        "train_astro": "org.grobid.trainer.AstroTrainer",
        "trainer"    : "org.grobid.trainer.AstroTrainerRunner"
]

trainerTasks.each { taskName, mainClassName ->
    tasks.create(name: taskName, type: JavaExec, group: 'training') {
        main = mainClassName
        classpath = sourceSets.main.runtimeClasspath
    }
}

// return the default value if the property has not been specified in command line 
ext.getArg = { propName, defaultVal ->
    return project.hasProperty(propName) ? project.getProperty(propName) : defaultVal;
}

// Evaluation
// run like: gradle eval_astro -gH /path/to/grobid-home
task eval_astro(dependsOn: 'classes', type: JavaExec, group: 'training') {
    main = 'org.grobid.trainer.AstroTrainerRunner'
    classpath = sourceSets.main.runtimeClasspath
    args 1, 'astro', '-gH', getArg('gH', '../grobid-home')
    jvmArgs '-Xmx3072m'
}

// run like: gradle eval_astro_split -gH /path/to/grobid-home
task eval_astro_split(dependsOn: 'classes', type: JavaExec, group: 'training') {
    main = 'org.grobid.trainer.AstroTrainerRunner'
    classpath = sourceSets.main.runtimeClasspath
    args 2, 'astro', '-gH', getArg('gH', '../../grobid-home'), '-s', getArg('s', '0.8')
    jvmArgs '-Xmx3072m'
}

// One jar configuration

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task mainJar(type: ShadowJar, group: 'test') {
    zip64 true
    from sourceSets.main.output
    from {
//        project.configurations.compile.collect {
//            it.isDirectory() ? [] : localLibs.contains(it.getName()) ? zipTree(it) : []
//        }
    }
}

shadowJar {
    classifier = 'onejar'
    zip64 true
    manifest {
        attributes 'Main-Class': 'org.grobid.core.main.batch.AstroMain'
    }
}

jar {
    dependsOn mainJar
    enabled false
}

artifacts {
    archives shadowJar
//    archives mainJar
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
    options.compilerArgs << "-Xlint:unchecked"
}


task copyModels(type: Copy) {
    from "${rootDir}/resources/models"
    include "*"
    into "${rootDir}/../grobid-home/models/astro/"
}

